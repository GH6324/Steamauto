name: Build & Publish
on:
  push:
    branches: [master]
  workflow_dispatch:
jobs:
  Check-Changes:
    runs-on: ubuntu-latest
    outputs:
      should_run: ${{ steps.check.outputs.should_run }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check for Python file changes
        id: check
        run: |
          # 检查是否有 .py 文件的变更
          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -qE '\.py$'
          then
            echo "Python file changes found, set should_run to true"
            echo "should_run=true" >> $GITHUB_OUTPUT
          else
            echo "No Python file changes detected"
            echo "should_run=false" >> $GITHUB_OUTPUT
          fi

  Build:
    if: ${{ needs.Check-Changes.outputs.should_run == 'true' }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@main
        with:
          python-version: "3.12"

      - name: Install requirements and build
        run: |
          pip install pyinstaller
          pip install -r requirements.txt
          python .github/scripts/add_build_info.py
          pyinstaller -F Steamauto.py --collect-all apprise --name Steamauto-${{ matrix.os }} --add-data "plugins:plugins"

      - name: Upload artifacts
        uses: actions/upload-artifact@main
        with:
          name: ${{ matrix.os }}-dist
          path: dist

  Publish:
    if: ${{ needs.Check-Changes.outputs.should_run == 'true' }}
    needs: Build
    runs-on: ubuntu-latest
    steps:
      - name: Repository Dispatch
        uses: peter-evans/repository-dispatch@main
        with:
          token: ${{ secrets.PAT }}
          repository: jiajiaxd/Steamauto-Tutorial
          event-type: Sync
          
      - name: Download artifacts
        uses: actions/download-artifact@main
        with:
          path: ./Steamauto

      - name: Finalization
        run: |
          sudo timedatectl set-timezone "Asia/Shanghai"
          echo "DATE=$(date +"%Y%m%d-%H%M")" >> $GITHUB_ENV
          mkdir releases
          mv Steamauto/windows-latest-dist/* releases/
          mv Steamauto/ubuntu-latest-dist/* releases/

      - name: Upload to Github Releases
        uses: ncipollo/release-action@main
        with:
          commit: "master"
          tag: ${{ env.DATE }}
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: releases/*
          prerelease: true